'use client';

import type { FC } from 'react';
import { useChapters } from '@/api/hooks/useAdmin';
import styles from './ReadContentTab.module.scss'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —Å—Ç–∏–ª–∏

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ListenContentTab
 */
export interface ListenContentTabProps {
  /** ID –≤–µ—Ä—Å–∏–∏ –∫–Ω–∏–≥–∏ */
  versionId: string;
}

/**
 * –¢–∞–± –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∫–Ω–∏–≥–∏
 *
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç:
 * - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ –≥–ª–∞–≤
 * - –ó–∞–≥—Ä—É–∂–∞—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª—ã
 * - –£–ø—Ä–∞–≤–ª—è—Ç—å –∞—É–¥–∏–æ –≥–ª–∞–≤–∞–º–∏
 * - –î–æ–±–∞–≤–ª—è—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã
 */
export const ListenContentTab: FC<ListenContentTabProps> = (props) => {
  const { versionId } = props;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤—ã (–∞—É–¥–∏–æ)
  const { data: chapters, error, isLoading } = useChapters(versionId);

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
   */
  const handleUploadAudio = () => {
    // TODO (M3.2.3): –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∞—É–¥–∏–æ
    console.log('Upload audio for version:', versionId);
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ –≥–ª–∞–≤—ã
   */
  const handleAddAudioChapter = () => {
    // TODO (M3.2.3): –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ –≥–ª–∞–≤—ã
    console.log('Add audio chapter for version:', versionId);
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É–¥–∏–æ –≥–ª–∞–≤—ã
   */
  const handleEditAudioChapter = (chapterId: string) => {
    // TODO (M3.2.3): –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ –≥–ª–∞–≤—ã
    console.log('Edit audio chapter:', chapterId);
  };

  // Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (isLoading) {
    return (
      <div className={styles.container}>
        <p>Loading audio chapters...</p>
      </div>
    );
  }

  // Error —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (error) {
    return (
      <div className={styles.container}>
        <p className={styles.errorText}>Failed to load audio chapters: {error.message}</p>
      </div>
    );
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ –≥–ª–∞–≤—ã
  const audioChapters = chapters?.filter((ch) => ch.audioUrl) || [];

  // –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (audioChapters.length === 0) {
    return (
      <div className={styles.container}>
        <div className={styles.header}>
          <h2 className={styles.title}>Audio Chapters</h2>
          <button className={styles.addButton} onClick={handleAddAudioChapter} type="button">
            + Add Audio Chapter
          </button>
        </div>

        <div className={styles.emptyState}>
          <div className={styles.emptyIcon}>üéß</div>
          <p className={styles.emptyText}>No audio chapters yet. Start by uploading audio files.</p>
          <button className={styles.addButton} onClick={handleUploadAudio} type="button">
            Upload Audio
          </button>
        </div>
      </div>
    );
  }

  // –°–ø–∏—Å–æ–∫ –∞—É–¥–∏–æ –≥–ª–∞–≤
  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h2 className={styles.title}>Audio Chapters ({audioChapters.length})</h2>
        <button className={styles.addButton} onClick={handleAddAudioChapter} type="button">
          + Add Audio Chapter
        </button>
      </div>

      <div className={styles.chaptersList}>
        {audioChapters.map((chapter) => (
          <div key={chapter.id} className={styles.chapterItem}>
            <div className={styles.chapterInfo}>
              <div className={styles.chapterTitle}>
                {chapter.orderIndex}. {chapter.title || 'Untitled Audio Chapter'}
              </div>
              <div className={styles.chapterMeta}>
                {chapter.isFree ? 'üÜì Free' : 'üîí Premium'}
                {chapter.duration && ` ‚Ä¢ ${Math.floor(chapter.duration / 60)} min`}
              </div>
            </div>

            <div className={styles.chapterActions}>
              <button
                className={styles.actionButton}
                onClick={() => handleEditAudioChapter(chapter.id)}
                type="button"
              >
                ‚úèÔ∏è Edit
              </button>
              <button className={styles.actionButton} type="button">
                üéµ Play
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};
