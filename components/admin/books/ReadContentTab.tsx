'use client';

import type { FC } from 'react';
import { useChapters } from '@/api/hooks/useAdmin';
import styles from './ReadContentTab.module.scss';

/**
 * –ü—Ä–æ–ø—Å—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ReadContentTab
 */
export interface ReadContentTabProps {
  /** ID –≤–µ—Ä—Å–∏–∏ –∫–Ω–∏–≥–∏ */
  versionId: string;
}

/**
 * –¢–∞–± –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –∫–Ω–∏–≥–∏
 *
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç:
 * - –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≥–ª–∞–≤
 * - –°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –≥–ª–∞–≤—ã
 * - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≥–ª–∞–≤—ã
 * - –£–¥–∞–ª—è—Ç—å –≥–ª–∞–≤—ã
 * - –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–ª–∞–≤—ã —á–µ—Ä–µ–∑ drag-and-drop
 */
export const ReadContentTab: FC<ReadContentTabProps> = (props) => {
  const { versionId } = props;

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–ª–∞–≤—ã
  const { data: chapters, error, isLoading } = useChapters(versionId);

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –≥–ª–∞–≤—ã
   */
  const handleAddChapter = () => {
    // TODO (M3.2.3): –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤—ã
    console.log('Add chapter for version:', versionId);
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤—ã
   */
  const handleEditChapter = (chapterId: string) => {
    // TODO (M3.2.3): –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã
    console.log('Edit chapter:', chapterId);
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –≥–ª–∞–≤—ã
   */
  const handleDeleteChapter = (chapterId: string) => {
    // TODO (M3.2.3): –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –≥–ª–∞–≤—ã
    console.log('Delete chapter:', chapterId);
  };

  // Loading —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (isLoading) {
    return (
      <div className={styles.container}>
        <p>Loading chapters...</p>
      </div>
    );
  }

  // Error —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (error) {
    return (
      <div className={styles.container}>
        <p className={styles.errorText}>Failed to load chapters: {error.message}</p>
      </div>
    );
  }

  // –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  if (!chapters || chapters.length === 0) {
    return (
      <div className={styles.container}>
        <div className={styles.header}>
          <h2 className={styles.title}>Chapters</h2>
          <button className={styles.addButton} onClick={handleAddChapter} type="button">
            + Add Chapter
          </button>
        </div>

        <div className={styles.emptyState}>
          <div className={styles.emptyIcon}>üìñ</div>
          <p className={styles.emptyText}>No chapters yet. Start adding content to your book.</p>
          <button className={styles.addButton} onClick={handleAddChapter} type="button">
            Create First Chapter
          </button>
        </div>
      </div>
    );
  }

  // –°–ø–∏—Å–æ–∫ –≥–ª–∞–≤
  return (
    <div className={styles.container}>
      <div className={styles.header}>
        <h2 className={styles.title}>Chapters ({chapters.length})</h2>
        <button className={styles.addButton} onClick={handleAddChapter} type="button">
          + Add Chapter
        </button>
      </div>

      <div className={styles.chaptersList}>
        {chapters.map((chapter) => (
          <div key={chapter.id} className={styles.chapterItem}>
            <div className={styles.chapterInfo}>
              <div className={styles.chapterTitle}>
                {chapter.orderIndex}. {chapter.title || 'Untitled Chapter'}
              </div>
              <div className={styles.chapterMeta}>
                {chapter.isFree ? 'üÜì Free' : 'üîí Premium'}
                {chapter.content && ` ‚Ä¢ ${chapter.content.length} characters`}
              </div>
            </div>

            <div className={styles.chapterActions}>
              <button
                className={styles.actionButton}
                onClick={() => handleEditChapter(chapter.id)}
                type="button"
              >
                ‚úèÔ∏è Edit
              </button>
              <button
                className={styles.actionButton}
                onClick={() => handleDeleteChapter(chapter.id)}
                type="button"
              >
                üóëÔ∏è Delete
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};
